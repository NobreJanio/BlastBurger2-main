version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: blastburger-postgres
    restart: unless-stopped
    ports:
      - '5436:5432'  # Porta externa diferente da atual (5435)
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=POSTGRES
      - POSTGRES_DB=blastburger
    volumes:
      - postgres_data_new:/var/lib/postgresql/data
    networks:
      - blastburger-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: blastburger-mongodb
    restart: unless-stopped
    ports:
      - '27020:27017'  # Porta externa diferente da atual (27019)
    environment:
      - MONGO_INITDB_DATABASE=blastburger
    volumes:
      - mongodb_data_new:/data/db
    networks:
      - blastburger-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blastburger-backend
    restart: unless-stopped
    ports:
      - '3003:3003'  # Porta externa diferente da atual (3002)
    environment:
      - NODE_ENV=development
      - PORT=3003
      - POSTGRES_URL=postgres://postgres:POSTGRES@postgres:5432/blastburger
      - MONGODB_URL=mongodb://mongodb:27017/blastburger
      - JWT_SECRET=ee340648e62b127fd0b0b12b614464c2830230e5c8472856f28c759b713d069a6432030d0e11d58af24d66b7fb59894c37657b16e134c91bb3aa742bac81a5d8
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASS=POSTGRES
      - DB_NAME=blastburger
      - DB_PORT=5432
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_uploads:/app/uploads
    networks:
      - blastburger-network
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    command: ["npm", "run", "dev"]

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: blastburger-frontend
    restart: unless-stopped
    ports:
      - '5175:5175'  # Porta externa diferente da atual (5174)
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3003
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - blastburger-network
    depends_on:
      - backend

networks:
  blastburger-network:
    driver: bridge

volumes:
  postgres_data_new:
    driver: local
  mongodb_data_new:
    driver: local
  backend_uploads:
    driver: local